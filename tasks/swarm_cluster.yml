---

- name: Check if "Swarm Mode" is enabled.
  shell: docker info
  changed_when: False
  register: docker_info

- name: Init "Swarm Mode" on the first manager.
  shell: docker swarm init
        --advertise-addr {{ docker_swarm_addr }}
        --listen-addr {{ docker_swarm_addr }}:{{ docker_swarm_port }}
  when: "docker_info.stdout.find('Swarm: active') == -1
    and inventory_hostname == groups['docker_swarm_manager'][0]"

- name: Get the worker join-token.
  shell: docker swarm join-token -q worker
  changed_when: False
  run_once: true
  register: docker_worker_token
  when: inventory_hostname == groups['docker_swarm_manager'][0]

- name: Export the address of the first Swarm manager as a fact.
  set_fact:
    docker_manager_address: "{{ docker_swarm_addr }}:{{ docker_swarm_port }}"
  run_once: true
  when: inventory_hostname == groups['docker_swarm_manager'][0]

- name: Join the Swarm nodes.
  shell: docker swarm join
        --listen-addr {{ docker_swarm_addr }}:{{ docker_swarm_port }}
        --token "{{ docker_worker_token.stdout }}"
        {{ docker_manager_address }}
  changed_when: False
  when: "docker_info.stdout.find('Swarm: active') == -1
    and docker_info.stdout.find('Swarm: pending') == -1
    and inventory_hostname != groups['docker_swarm_manager'][0]"

- name: Export the pending Swarm managers NodeID.
  shell: "docker info | grep NodeID | sed -e 's/NodeID://'"
  register: docker_node_id
  changed_when: False
  when: "'docker_swarm_manager' in group_names
    and docker_info.stdout is defined
    and docker_info.stdout.find('Is Manager: true') == -1"

- name: Accept the pending Swarm managers.
  shell: docker node promote {{ hostvars[item]['docker_node_id']['stdout'] }}
  with_items: "{{ groups['docker_swarm_manager'] }}"
  run_once: true
  when: "inventory_hostname == groups['docker_swarm_manager'][0]
    and hostvars[item]['docker_node_id']['stdout'] is defined"
